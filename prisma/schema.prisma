generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Map {
  id                   String   @id @default(uuid())
  produto              String
  descricao            String
  b_o                  String
  mat_med              String
  fornecedor           String
  comprador            String
  primeira_filial_rota String
  filial_dest          String
  sigla_dest           String
  empresa_dest         String
  grupo_tributacao     String
  flag_tributacao      String
  rota                 String
  codigo               String
  gui_semana_saida     String
  gui_semana_chegada   String
  modo_compra          String
  dia_sugerido_pedido  String
  qtd_comprada         Int
  preco_total          Decimal
  status               String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  codigo_produto       Product  @relation(fields: [produto], references: [codigo])
}

model Product {
  codigo      String      @id
  descricao   String
  grp_Marca   String
  d_Grp_Marca String
  refrig      String
  fornecedor  String      @default("-")
  tributacao  String      @default("-")
  status      String      @default("-")
  curva       String      @default("-")
  bo          String      @default("-")
  comprador   String      @default("-")
  historics   Historic[]
  inventories Inventory[]
  products    Map[]
  forecasts   Forecast[]
}

model Inventory {
  codigo                String
  filial                String
  id                    String  @id
  rota                  String
  m4                    Float
  m3                    Float
  m2                    Float
  m1                    Float
  forecast              Float
  estoque_in            Float
  estoque_livre         Float
  compras               Float
  transferencias        Float
  estoque_total         Float
  cmv                   Float
  mediaSimples          Float
  ultimoMes             Float
  novaMedia             Float
  menorVenda            Float
  maiorVenda            Float
  mediaPonderada        Float
  codigo_produto_saldos Product @relation(fields: [codigo], references: [codigo])
}

model Historic {
  id                   String        @id @default(uuid())
  import_id            String        @default(uuid())
  scenario_name        String
  scenario_tag         String
  scenario_description String
  source_file          String
  product              String
  data                 String
  quantity             Float
  cd                   String
  createdAt            DateTime      @default(now())
  status               StatusProcess
  produto_ref          Product       @relation(fields: [product], references: [codigo])
}

model Forecast {
  id             String  @id @default(uuid())
  codigo_produto String
  data           String
  previsao       Float
  cd             String
  codigo_ref     Product @relation(fields: [codigo_produto], references: [codigo])
}

enum StatusProcess {
  imported
  queued
  processing
  completed
  failed
}
